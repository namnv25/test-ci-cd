name: test-ci-cd

on:
  push:
    branches:
      - "main"
jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Docker Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: SETUP DOCKER BUILD
        uses: docker/setup-buildx-action@v1
        id: buildx
      # - name: Build and push reactjs
      #   uses: docker/build-push-action@v3
      #   with:
      #     context: ./reactjs
      #     push: true
      #     tags: ${{ secrets.DOCKER_HUB_USERNAME }}/reactjs-product
      - name: Build and PUSH DOCKER IMAGE CLIENT SERVER
        uses: docker/build-push-action@v2
        with:
          context: ./nextjs
          file: ./nextjs/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/nextjs
      - name: Verify
        run: echo "Đã thành công"
  deploy:
    needs: docker
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.BUILD_HOSTING_NAME }}
          username: root
          password: ${{ secrets.BUILD_SSH_PASSWORD}}
          port: 22
          script_stop: true

          script: |

            echo "connect to  root@${{ secrets.BUILD_HOSTING_NAME }} "

            cd test-ci-cd

            # git pull

            docker pull namnv251/nextjs:latest

            echo " pull soucre code success"

            docker compose up -d --build

            echo " docker compose success"
  notification:
    needs: deploy
    runs-on: ubuntu-latest

    steps:
      - uses: sarisia/actions-status-discord@v1
        if: always()
        with:
          webhook: ${{ secrets.WEBHOOK_URL }}
